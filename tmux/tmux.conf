#tpipleline
# unbind-key -a
set -g focus-events on
set -g status-style bg=default

# set -g status-left '#(cat #{socket_path}-\#{session_id}-vimbridge)'
# set -g status-left-length 100
# set -g status-right '#(cat #{socket_path}-\#{session_id}-vimbridge-R)'
# set -g status-right-length 90
# set -g status-justify centre


# statusbar
set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 100
set -g status-right-length 100 
set -g status-left ' #[fg=green,dim,bright,noitalics]    #(uptime | cut -d , -f 1 | cut -d " " -f 4-6)#[fg=black] • #[fg=green,bg=default]#{now_playing}'
set -g status-right '  #[fg=white,bg=default] #(rainbarf --rgb --width 30)  #{tmux_mode_indicator} '
# set -g status-right '#[fg=green,bg=default,bright]#(rainbarf --battery --remaining --rgb) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",")  %Y-%m-%d  '
# ~/.local/bin/get_current_spotify
# keys
unbind C-b
set -g prefix 'C-a'


# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vim tmux navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# options
set -g default-terminal "tmux-256color"

set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM
set -s set-clipboard on
set -g base-index 1
setw -g xterm-keys on
set -s escape-time 0
set -sg repeat-time 300
set -s focus-events on
set -g mouse on
set -sg exit-empty on
set -q -g status-utf8 on
setw -q -g utf8 on
set -g base-index 1
setw -g pane-base-index 1
setw -g automatic-rename on
set -g renumber-windows on
set -g set-titles on
bind > swap-pane -D
bind < swap-pane -U
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "~/.config/tmux/tmux.conf reloaded."

# bind -n C-1 select-window -t 1
# bind -n C-2 select-window -t 2
# bind -n C-3 select-window -t 3
# bind -n C-4 select-window -t 4
# bind -n C-5 select-window -t 5
# bind -n C-6 select-window -t 6
# bind -n C-7 select-window -t 7
# bind -n C-8 select-window -t 8
# bind -n C-9 select-window -t 9
#
# bind -n M-! join-pane -t :1
# bind -n M-@ join-pane -t :2
# bind -n 'M-#' join-pane -t :3
# bind -n 'M-$' join-pane -t :4
# bind -n M-% join-pane -t :5
# bind -n M-^ join-pane -t :6
# bind -n M-& join-pane -t :7
# bind -n M-* join-pane -t :8
# bind -n M-( join-pane -t :9

# from powerline
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

# pane boeder
set-option -g pane-border-style fg=colour235 #fg=base02
set-option -g pane-active-border-style fg=colour240 #fg=base01

#clock colour
set-option -g clock-mode-colour green

# bsp
bind b run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && tmux splitw -v -c '#{pane_current_path}' || tmux splitw -h -c '#{pane_current_path}'"

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default,dim # fg=base0

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default,bright # fg=orange

# message text
set-option -g message-style bg=colour235,fg=colour166 # bg=base02, fg=orange


# Vi copypaste mode
set-window-option -g mode-keys vi
# bind-key -t   vi-copy y   'reattach-to-user-namespace pbcopy'
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'


# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# float terminal 
set -g @floax-bind '-n M-p'
set -g @floax-text-color 'green'
set -g @floax-border-color 'green'

# plugins
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'
set -g @plugin 'spywhere/tmux-named-snapshot'
set -g @plugin 'omerxx/tmux-floax'
set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'imomaliev/tmux-keyboard-layout'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
set -g @plugin 'spywhere/tmux-now-playing'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
# set -g @plugin 'Brutuski/tmux-piavpn'
# set -g @plugin 'tassaron/tmux-df'
# set -g @plugin 'erikw/tmux-powerline'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'

#restore pane content
# set -g @net_speed_interfaces "eth0 eth1"
set -g @now-playing-status-format '{icon} {scrollable} '
set -g @now-playing-scrollable-format '{artist} - {title}'
set -g @resurrect-capture-pane-contents 'on'
